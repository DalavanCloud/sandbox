

Day 1
Introduction: what is continuous delivery? what is quality?
Basics of an sophisticated build system (congruent builds)
Continuous integration build strategies and best practices
Setting up and using Maven 3
Prototype archetype
Deploy distribution management
Automated release strategies (SNAPSHOT and RELEASE artifacts), different approaches
Enforcer (Describing your project and dependencies, with Maven)
Automated testing: unit tests, component tests, functinal tests, acceptance tests, smoke tests
Cargo, Jetty, Testing 
Checkin to GitHub

Day 2
Setting up a Jenkins server
-- JobConfigHistory Plugin
-- parametrized trigger plugin
-- green ball
-- git client git server

Delivery piplelines, staged builds
pipeline:
-- Continuous build
---- checkout project from GitHub
---- what to check? -> compile 
-- Build all 15 min
--- stage 1
---- compile, unit testing, smoke test cargo
---- store version.properties
---- store git info (groovy postbuild plugin)
---- copy artifact locally
---- trigger second step
--- stage 2
---- do sth. with WAR
--- stage 3
-- build pipeline plugin
(---- build flow plugin)
Setting up a component repository (Artifactory)
-- create user for deploy
-- consolidate repos
Integrate Jenkins and Artifatory
-- deploy SNAPSHOT to Artifactory

Day 3
Distribution management in POM
Artifactory import/export
settings.xml
Automated release strategies (SNAPSHOT and RELEASE artifacts) - Redux (Artifatory features)
Automated deployment, continuous delivery
Distributed builds; build slaves
Scaling Jenkins to large, complex systems
Writing Maven plug-ins > 434
Calling Maven Plug-ins 
RC
--- build again
--- enforcer
--- publish to Artifactory  
----- checkout Git hash
----- version setzen versions:set
GA
--- publish to Bintray
--- take version from Artifactory, publish to Bintray
Setting up a Sonar server
Integrate into QA build chain
Integrating Jenkins with your issue management system, e.g. JIRA
Task-based development (with Mylyn, JIRA, Jenkins, and others)
Infrastructure as code: Puppet
Database migrations, with Flyway


